/* This file is generated, do not edit! */
package scipy.sparse.sparsetools;
@:pythonImport("scipy.sparse.sparsetools") extern class Sparsetools_Module {
	static public function bsr_diagonal(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function bsr_eldiv_bsr(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function bsr_elmul_bsr(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function bsr_ge_bsr(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function bsr_gt_bsr(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function bsr_le_bsr(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function bsr_lt_bsr(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function bsr_matmat(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function bsr_matvec(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function bsr_matvecs(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function bsr_maximum_bsr(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function bsr_minimum_bsr(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function bsr_minus_bsr(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function bsr_ne_bsr(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function bsr_plus_bsr(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function bsr_scale_columns(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function bsr_scale_rows(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function bsr_sort_indices(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function bsr_tocsr(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function bsr_transpose(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function coo_matvec(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function coo_tocsr(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function coo_todense(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function cs_graph_components(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csc_diagonal(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csc_eldiv_csc(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csc_elmul_csc(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csc_ge_csc(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csc_gt_csc(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csc_le_csc(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csc_lt_csc(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csc_matmat(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csc_matmat_maxnnz(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csc_matvec(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csc_matvecs(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csc_maximum_csc(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csc_minimum_csc(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csc_minus_csc(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csc_ne_csc(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csc_plus_csc(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csc_tocsr(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csr_column_index1(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csr_column_index2(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csr_count_blocks(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csr_diagonal(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csr_eldiv_csr(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csr_eliminate_zeros(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csr_elmul_csr(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csr_ge_csr(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csr_gt_csr(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csr_has_canonical_format(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csr_has_sorted_indices(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csr_hstack(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csr_le_csr(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csr_lt_csr(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csr_matmat(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csr_matmat_maxnnz(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csr_matvec(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csr_matvecs(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csr_maximum_csr(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csr_minimum_csr(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csr_minus_csr(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csr_ne_csr(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csr_plus_csr(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csr_row_index(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csr_row_slice(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csr_sample_offsets(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csr_sample_values(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csr_scale_columns(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csr_scale_rows(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csr_sort_indices(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csr_sum_duplicates(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csr_tobsr(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csr_tocsc(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function csr_todense(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function dia_matvec(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function expandptr(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function get_csr_submatrix(args:haxe.extern.Rest<Dynamic>):Dynamic;
	static public function test_throw_error(args:haxe.extern.Rest<Dynamic>):Dynamic;
}